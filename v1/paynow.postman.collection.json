{
	"info": {
		"_postman_id": "6fadad3e-d8d7-4188-b8ae-9767f22dd0a5",
		"name": "Paynow API V1",
		"description": "To find API documentation follow the link: [https://docs.paynow.pl/docs/reference/v1/api-reference](https://docs.paynow.pl/docs/reference/v1/api-reference)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33316453"
	},
	"item": [
		{
			"name": "Payment",
			"item": [
				{
					"name": "Payment request",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var uuid = require('uuid');",
									"pm.globals.set(\"externalId\", uuid.v4());",
									"var replaced = request.data.replace(/{{(\\w*)}}/g,function(str,key) {return pm.globals.get(key)});",
									"pm.globals.set(\"signature\",  CryptoJS.enc.Base64.stringify(CryptoJS.HmacSHA256(replaced, pm.environment.get('apiSignatureKey'))));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should make a new payment\", function () {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"redirectUrl\", jsonData.redirectUrl);",
									"    pm.environment.set(\"paymentId\", jsonData.paymentId);",
									"    pm.environment.set(\"accessToken\", jsonData.redirectUrl.split(\"?token=\")[1]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{apiKey}}",
								"type": "text"
							},
							{
								"key": "Signature",
								"value": "{{signature}}",
								"type": "text"
							},
							{
								"key": "Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": \"45671\",\n    \"externalId\": \"{{externalId}}\",\n    \"description\": \"Payment description\",\n    \"buyer\": {\n        \"email\": \"jan.kowalski@melements.pl\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/v1/payments",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"payments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Payment status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{apiUrl}}/v1/payments/{{paymentId}}/status",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"payments",
								"{{paymentId}}",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Payment methods",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{apiUrl}}/v1/payments/paymentmethods",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"payments",
								"paymentmethods"
							]
						}
					},
					"response": []
				},
				{
					"name": "Payment request [WHITELABEL]",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var uuid = require('uuid');",
									"pm.globals.set(\"externalId\", uuid.v4());",
									"var replaced = request.data.replace(/{{(\\w*)}}/g,function(str,key) {return pm.globals.get(key)});",
									"pm.globals.set(\"signature\",  CryptoJS.enc.Base64.stringify(CryptoJS.HmacSHA256(replaced, pm.environment.get('apiWhiteLabelSignatureKey'))));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should make a new payment\", function () {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"paymentId\", jsonData.paymentId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{apiKeyWhiteLabel}}",
								"type": "text"
							},
							{
								"key": "Signature",
								"value": "{{signature}}",
								"type": "text"
							},
							{
								"key": "Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": \"45671\",\n    \"externalId\": \"{{externalId}}\",\n    \"description\": \"Payment description\",\n    \"paymentMethodId\": \"2007\",\n    \"authorizationCode\": \"111111\",\n    \"buyer\": {\n        \"email\": \"jan.kowalski@melements.pl\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/v1/payments",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"payments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Payment status [WHITELABEL]",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{integratorPublicUrl}}/v1/payments/{{paymentId}}/status",
							"host": [
								"{{integratorPublicUrl}}"
							],
							"path": [
								"v1",
								"payments",
								"{{paymentId}}",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Data processing notices [WHITELABEL]",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{apiUrl}}/v1/payments/dataprocessing/notices?locale=pl-PL",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"payments",
								"dataprocessing",
								"notices"
							],
							"query": [
								{
									"key": "locale",
									"value": "pl-PL"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Refund",
			"item": [
				{
					"name": "Refund request",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var replaced = request.data.replace(/{{(\\w*)}}/g,function(str,key) {return pm.globals.get(key)});",
									"pm.globals.set(\"signature\",  CryptoJS.enc.Base64.stringify(CryptoJS.HmacSHA256(replaced, pm.environment.get('apiSignatureKey'))));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should make a new refund\", function () {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"refundId\", jsonData.refundId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{apiKey}}",
								"type": "text"
							},
							{
								"key": "Signature",
								"value": "{{signature}}",
								"type": "text"
							},
							{
								"key": "Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 100\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/v1/payments/{{paymentId}}/refunds",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"payments",
								"{{paymentId}}",
								"refunds"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refund status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{apiUrl}}/v1/refunds/{{refundId}}/status",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"refunds",
								"{{refundId}}",
								"status"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Configuration",
			"item": [
				{
					"name": "Shop URLs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set(\"signature\",  CryptoJS.enc.Base64.stringify(CryptoJS.HmacSHA256(pm.request.body.raw, pm.environment.get('apiSignatureKey'))));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should accept urls configuration update\", function () {",
									"    pm.response.to.have.status(204);",
									"    pm.response.to.not.have;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Api-Key",
								"value": "{{apiKey}}"
							},
							{
								"key": "Signature",
								"value": "{{signature}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"notificationUrl\": \"https://example.com/notifications\",\n\t\"continueUrl\": \"https://example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/v1/configuration/shop/urls",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"v1",
								"configuration",
								"shop",
								"urls"
							]
						},
						"description": "update notificttion and continue URL"
					},
					"response": []
				}
			]
		}
	]
}